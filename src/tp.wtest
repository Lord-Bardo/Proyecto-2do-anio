import tp.*

describe "Testeando Personaje"{
	
	const vidaEnemigo = new Atributo(nro = 200, x= 700,y = 577, imagen ="BarritaVida.png")
	const staminaEnemigo= new Atributo(nro =1,x= 900, y=600, imagen="stamina.png")
	const defensaEnemigo = new Atributo(nro = 20, x= 900, y= 500, imagen ="defensa.png")
	const danioEnemigo = new Atributo(nro = 30, x=900 , y= 400, imagen ="ataque.png")	
	
	
	const vidaMessi = new Atributo(nro = 500, x= 325,y = 577, imagen ="BarritaVida.png")
	const staminaMessi= new Atributo(nro = 2, x= 270, y=600, imagen= "stamina.png")
	const defensaMessi = new Atributo(nro = 30, x= 270, y= 500, imagen ="defensa.png")
	const danioMessi = new Atributo(nro = 30, x=270 , y= 400, imagen ="ataque.png") 
	
	const balonesDeOro = new CartaAtaque(costo = 1 , ruta = "BalonesDeOro.png", x= 441)
	const botines = new CartaAumento(costo = 1, ruta = "Botinesf50.png", x= 221, aumento= 5, atributo ="danio")
	const hormonas = new CartaAumento(costo = 1, ruta = "Hormonas.png", x= 221, aumento= 10,atributo= "danio")
	const dibu = new CartaAumento(costo = 1, ruta = "Dibu.png", x= 38, aumento= 10,atributo= "defensa")
	const milaGod = new CartaAumento(costo = 1, ruta = "MilaGod.png", x= 38,aumento= 50,atributo= "vida")
	const siestita = new CartaAumento(costo =1 , ruta ="Siestita.png",x=38, aumento =3, atributo ="stamina")
	
	
	
	const listaMessi = [balonesDeOro, botines,hormonas, dibu, milaGod,siestita]
	const listaEnemigo1 = [botines]//esto va a ser un problema, o no?
	
	const messi = new Personaje(vida=vidaMessi, danio = danioMessi, defensa= defensaMessi, ruta = "Messi.png",x=360, y=423, listaCartas= listaMessi,stamina=staminaMessi)
	const enemigo1 = new Personaje(vida = vidaEnemigo, danio = danioEnemigo, defensa = defensaEnemigo, ruta="Mbappe.png",x=740,y=420, listaCartas = listaEnemigo1,stamina=staminaEnemigo)
	
	const staminaAlta =new Atributo(nro =4,x= 900, y=600, imagen="stamina.png")
	const defensaNula = new Atributo(nro= 0,x= 900, y= 500, imagen ="defensa.png" )
	const enemigoConDefensaNula = new Personaje(vida = vidaEnemigo, danio = danioEnemigo, defensa = defensaNula, ruta="Mbappe.png",x=740,y=420, listaCartas = listaEnemigo1,stamina=staminaEnemigo)
	
	test "Si messi tiene 500 de vida la consulta de su vida debe dar 500" {

		assert.equals(500, messi.consultarVida())
	}
	
	test "El enemigo1 tiene 200 de vida, la consulta deberia devolver 200"{
		assert.equals(200, enemigo1.consultarVida())
	}
	
	test "El danio de messi deberia ser de 30"{
		assert.equals(30, messi.consultarDanio())
	}
	test "La defensa del enemigo deberia ser 20"{
		assert.equals(20, enemigo1.consultarDefensa())
	}
	test "La estamina  del enemigo 1"{
		//assert.equals(2, messi.consultarStamina())
		assert.equals(1, enemigo1.consultarStamina())
	}
	
	
	test "Si messi recibeDanio(20) deberia recibir 14 de danio y quedarse con 486 de vida" {
		//(dmg* (100- defensa.valor())/100)
		messi.recibeDanio(20)
		assert.equals(486, messi.consultarVida())
		
	}
	test "Si el enemigo1 tiene 20 de defensa y recibeDanio(20) deberia recibir 16 de danio y quedarse con 184 de vida"{
		////(dmg* (100- defensa.valor())/100)
		enemigo1.recibeDanio(20)
		assert.equals(184,enemigo1.consultarVida())
		
	}
	test "Si el enemigoConDefensaNula recibeDanio(20) deberia recibir 20 de danio y quedarse con 180 de vida"{
		enemigoConDefensaNula.recibeDanio(20)
		assert.equals(180,enemigoConDefensaNula.consultarVida())
	}
	test "Si messi recibeDanio(0) no deberia perder vida, tendria que ser 500"{
		messi.recibeDanio(0)
		assert.equals(500, messi.consultarVida())
	}
	test "Si el enmigo1 recibeDanio(0) no deberia perder vida, tendria que ser 200"{
		enemigo1.recibeDanio(0)
		assert.equals(200, enemigo1.consultarVida())
	}
	
	test "Si messi ataca, el enemigo sin defensa, este recibe 30 de danio y quedar con 170 de vida" {
	
		messi.atacar(enemigoConDefensaNula)
		assert.equals(170, enemigoConDefensaNula.consultarVida())
	
	}
	test "Si messi ataca al enemigo1 teniendo 30 de danio, que tiene 20 de defensa, este enemigo deberia recibir 24 de danio y quedarse con 176 de vida"{
		////(dmg* (100- defensa.valor())/100)
		messi.atacar(enemigo1)
		assert.equals(176, enemigo1.consultarVida())
	}
	test "Si el enemigo1 tiene 30 de danio y ataca a messi que tiene 30 de defensa, este ultimo deberia quedarse con 479 de vida (recibio 21 de danio)"{
		////(dmg* (100- defensa.valor())/100)
		enemigo1.atacar(messi)
		assert.equals(479, messi.consultarVida())
	}
	test "Si el enemigoConDefensaNula recibe 200 de danio, deberia estar muerto"{
		enemigoConDefensaNula.recibeDanio(200)
		assert.equals(true, enemigoConDefensaNula.estaMuerto())
	}
	
	test "Se agarra las primeras 5 cartas de la lista de cartas de  messi"{
	messi.asignarMano()
	assert.equals([balonesDeOro, botines,hormonas, dibu, milaGod],messi.mano())
	}
	
	test "Si incremento la stamina de messi que tiene 2, deberia quedar en 3"{
		messi.incrementarStamina()
		assert.equals(3, messi.consultarStamina())
	}
	test "Si incremento 5 veces la stamina del enemigoSinDefensa que tiene 4, deberia quedar en 6 "{
		enemigoConDefensaNula.incrementarStamina()
		enemigoConDefensaNula.incrementarStamina()
		enemigoConDefensaNula.incrementarStamina()
		enemigoConDefensaNula.incrementarStamina()
		enemigoConDefensaNula.incrementarStamina()
		
		assert.equals(6, enemigoConDefensaNula.consultarStamina())
	}
	
}


	
	


	



